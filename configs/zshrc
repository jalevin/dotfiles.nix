# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000000
SAVEHIST=100000

setopt hist_expire_dups_first # remove duplicate from beginning of history
setopt hist_find_no_dups      # don't show dups when searching history
setopt hist_verify            # perform command expansion then run
setopt inc_append_history     # append history
#setopt nomatch                # not sure why I had this
#setopt append_history        # share history between terminals immediately
unsetopt autocd beep extendedglob notify
bindkey -e
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line

# The following lines were added by compinstall
zstyle :compinstall filename "$HOME/.zshrc"
autoload -Uz compinit
compinit
# End of lines added by compinstall

if [[ $(sysctl -n machdep.cpu.brand_string) =~ "Apple" ]]; then
  export BREW_PATH="/opt/homebrew/"
else
  export BREW_PATH="/usr/local/"
fi

export PATH="$HOME/bin:$PATH"

# text highlighting
export PS1="%10F%m%f:%11F%1~%f \$ "
export CLICOLOR=1
export HOMEBREW_GITHUB_API_TOKEN="ea146b5cef777f50d0078d34149cfe4b5acfdb34"
export TERM=xterm-256color
export EDITOR="nvim"

# homebrew
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1

# go
export GOPATH="$HOME/projects/go"
export PATH="${PATH}:$GOPATH/bin"

godoc(){
		go doc -u "$@" | bat -l go
}

gosrc(){
    go doc -u -src "$@" | bat -l go
}

# docker
export DOCKER_ID_USER="levinology"

# psql path
# echo 'export PATH="/opt/homebrew/opt/libpq/bin:$PATH"' >> ~/.zshrc
export PATH="${BREW_PATH}/opt/libpq/bin:$PATH"

# python
#export PATH="$HOME/.pyenv/shims:/usr/local/sbin:$PATH"
export PATH=${BREW_PATH}/bin/python3:$PATH
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# aws
export PATH=${BREW_PATH}/opt/awscli:$PATH
alias aws-ident="aws sts get-caller-identity"
alias aws-unset="unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_DEFAULT_REGION && echo 'Cleared AWS Credentials'"

# system
alias reload="source ~/.zshrc"
alias rl="source ~/.zshrc"
alias cat="bat"
alias top="htop"
alias grep="rg"
alias ogrep="grep"
alias less="less -N"
alias vim="nvim"
alias vim="vi"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias cpu_usage="watch \"ps -Ao user,uid,comm,pid,pcpu,tty -r | head -n 6\""
alias sudo='sudo env PATH=“$PATH”' # use this to get my vim config
alias export_brew="brew leaves > brews_all.txt"
alias whitespace="/bin/cat -e -t -v"
alias projects="cd ~/projects"


#alias clear_vim_swap="find . -type f -name ".*.sw[klmnop]" -delete"
#alias vi="nvim -Nu"

# git
alias git_loc="git ls-files | while read f; do git blame -w -M -C -C --line-porcelain \"$f\" | grep -I '^author '; done | sort -f | uniq -ic | sort -n"
alias gdiff="git --no-pager diff"
alias g="git"
alias gm="git commit"
alias gmm='git checkout $(git_main_branch) && git pull && git checkout - && git merge main'
alias gback='git checkout -'

alias cleandocker="docker system prune -f"

# ruby
alias update_rbenv="brew update && brew upgrade ruby-build"

serve() {
  if [ -n "$1" ]
  then
    ruby -run -ehttpd . -p$1
  else
    ruby -run -ehttpd . -p8080
  fi
}

#export RUBYOPT="-W:no-deprecated"
alias old_ruby="RUBYOPT=\"\""

# rails
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
export PATH="$HOME/.rbenv/shims:/usr/local/sbin:$PATH"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
alias be="bundle exec"
alias ptest="PARALLELIZE_TESTS=true be rails test"
alias stest="PARALLELIZE_TESTS=true be rails test:system"
alias cap="be cap"
alias rake="be rake"
#alias rails="bundle exec rails"
alias rspec="be rspec"
alias guard="be guard"
#alias killpuma="ps -l | awk '/puma/ {print $2}' | xargs kill -9"
alias killpuma="pgrep puma 3 | xargs kill -9"
alias killruby="pgrep ruby 3 | xargs kill -9"
alias flushredis="redis-cli flushall"

alias editvscode="vim \"/Users/$(whoami)/Library/Application Support/Code/User/settings.json\""

#make json pretty
pj(){
		echo $1 | jq
}

# command history for zsh
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh" || true

autoload -U +X bashcompinit && bashcompinit

# Enabling and setting git info var to be used in prompt config.
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
# This line obtains information from the vcs.
zstyle ':vcs_info:git*' formats "(%F{yellow}@%b%f)"
precmd() {
    vcs_info
}
# Enable substitution in the prompt.
setopt prompt_subst

# terminal colors
# https://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html

# cmd success code %(?.√.?%?)

# Config for the prompt. PS1 synonym.
prompt='%F{green}%2/%f${vcs_info_msg_0_} %(?.%F{#00ff00}√.%F{#ff0000}%?)%f>'


## AUTOCOMPLETE

complete -o nospace -C /usr/local/bin/terraform terraform
source ${BREW_PATH}/share/zsh/site-functions/aws_zsh_completer.sh

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jeff/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/jeff/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# pnpm
export PNPM_HOME="/Users/jeff/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
#

# 1password 
source /Users/jeff/.config/op/plugins.sh

#grafana
export GOPRIVATE=github.com/grafana/* #grafana-com-clients/go/gcom
#alias gracli="~/projects/g/gracli/gracli"
alias fixyarn="YARN_CHECKSUM_BEHAVIOR=ignore yarn install --immutable && yarn start"
# grafana kubernetes
alias gk="$HOME/projects/g/grafana/bin/grafana kubectl"
export USE_GKE_GCLOUD_AUTH_PLUGIN=True
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jeff/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/jeff/Downloads/google-cloud-sdk/path.zsh.inc'; fi
#google cloud# The next line enables shell command completion for gcloud.
if [ -f '/Users/jeff/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/jeff/Downloads/google-cloud-sdk/completion.zsh.inc'; fi
# increase number of file descriptors
ulimit -S -n 16384
# node path
alias node18="export PATH=\"/opt/homebrew/opt/node@18/bin:$PATH\""
alias playwright="export PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH=\"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\""
# Grafana
export PATH="/Users/jeff/projects/g/deployment_tools/scripts/gcom/:$PATH"
# kubernetes
alias k="kubectl"
complete -o nospace -C /Users/jeff/projects/g/rrc-stats/bin/rrc rrc
